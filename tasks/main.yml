---
- name: 'Check mandatory variables are defined'
  assert:
    that:
      - application_name is defined
      - domain_name is defined
      - docker_network_name is defined
      - cloudwatch_region is defined
      - cloudwatch_log_group is defined
      - admin_user is defined
      - admin_password is defined
      - user is defined
      - group is defined
      - uid is defined
      - gid is defined
      - grafana_config_folder is defined

- name: Create the dockernetwork
  docker_network:
    name: "{{ docker_network_name }}"

- name: Create the files directory
  file:
    path: "{{ hostvars[inventory_hostname].working_directory }}{{ application_name }}/files"
    state: directory
    mode: 0755
    owner: "{{ user }}"
    group: "{{ group }}"

- name: Create the data directory
  file:
    path: "{{ hostvars[inventory_hostname].working_directory }}{{ application_name }}/files/data"
    state: directory
    mode: 0755
    owner: "{{ user }}"
    group: "{{ group }}"

- name: Copy provisioning folder
  copy:
    src: "{{ grafana_config_folder }}/provisioning"
    dest: "{{ hostvars[inventory_hostname].working_directory }}{{ application_name }}/files"
    owner: ubuntu
    group: ubuntu
    force: true
    mode: 0644
    directory_mode: 0775

- name: Copy dashboards folder
  copy:
    src: "{{ grafana_config_folder }}/dashboards"
    dest: "{{ hostvars[inventory_hostname].working_directory }}{{ application_name }}/files"
    owner: ubuntu
    group: ubuntu
    force: true
    mode: 0644
    directory_mode: 0775

- name: Create app container
  docker_container:
    name: "{{ application_name }}"
    image: "grafana/grafana:latest"
    restart_policy: "always"
    cleanup: true
    pull: true
    user: "{{uid}}:{{gid}}"
    exposed_ports:
      - 3000
    networks:
      - name: "{{ docker_network_name }}"
    log_driver: "awslogs"
    log_options:
      awslogs-region: "{{ cloudwatch_region }}"
      awslogs-group: "{{ cloudwatch_log_group }}"
      awslogs-stream: "{{ application_name }}"
    volumes:
      - "{{ hostvars[inventory_hostname].working_directory }}{{ application_name }}/files/data:/var/lib/grafana"
      - "{{ hostvars[inventory_hostname].working_directory }}{{ application_name }}/files/dashboards:/var/grafana/dashboards"
      - "{{ hostvars[inventory_hostname].working_directory }}{{ application_name }}/files/provisioning:/etc/grafana/provisioning"
    env:
      VIRTUAL_HOST: "{{ domain_name }}"
      LETSENCRYPT_HOST: "{{ domain_name }}"
      VIRTUAL_PORT: "3000"
      GF_SECURITY_ADMIN_USER: "{{ admin_user }}"
      GF_SECURITY_ADMIN_PASSWORD: "{{ admin_password }}"
